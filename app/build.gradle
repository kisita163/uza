apply plugin: 'com.android.application'
apply plugin: 'findbugs'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.kisita.uza"
        minSdkVersion 21
        targetSdkVersion 27
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-braintree.pro'
        }
        debug {
            debuggable false
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    sourceSets {
        main { res.srcDirs = ['src/main/res', 'src/main/res/anim', 'src/main/res/fonts'] }
    }
}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
    classes = files("$project.buildDir/intermediates/classes/release/com/kisita")

    // Use this only if you want exclude some errors
    //excludeFilter = file("$rootProject.rootDir/config/findbugs/exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()

    reports {
        xml.enabled = true
        xml.withMessages = true
        html.enabled = !xml.isEnabled()
        xml.destination "$project.buildDir/outputs/findbugs/findbugs-output.xml"
        html.destination "$project.buildDir/outputs/findbugs/findbugs-output.html"
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    //noinspection GradleDependency
    implementation 'com.android.support:support-annotations:26.1.0'
    compile 'com.android.support:appcompat-v7:27.1.0'
    compile 'com.android.support:recyclerview-v7:27.1.0'
    compile 'com.android.support:cardview-v7:27.1.0'
    compile 'com.android.support:support-v4:27.1.0'
    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-messaging:11.8.0'
    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-storage:11.8.0'
    compile 'com.firebaseui:firebase-ui-storage:0.6.0'
    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-auth:11.8.0'
    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-database:11.8.0'
    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-core:11.8.0'
    compile('com.firebase:firebase-jobdispatcher-with-gcm-dep:0.6.0') {
        exclude module: "play-services-gcm"
    }
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.lukekorth:mailable_log:0.1.6'


    //noinspection GradleDependency
    compile 'com.google.firebase:firebase-ads:11.8.0'
    //noinspection GradleDependency
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.android.support:design:27.1.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    //noinspection UseOfBundledGooglePlayServices,GradleDependency
    compile 'com.google.android.gms:play-services:11.8.0'
    compile 'com.github.mukeshsolanki:country-picker-android:1.2.2'
    compile 'com.stripe:stripe-android:6.1.2'

    //noinspection GradleDependency
    compile 'com.google.android.gms:play-services-wallet:11.8.0'
    compile 'com.braintreepayments:card-form:3.3.0'

    compile project(':Drop-In')
}

/*configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.+'
            }
        }
    }
}*/

apply plugin: 'com.google.gms.google-services'
